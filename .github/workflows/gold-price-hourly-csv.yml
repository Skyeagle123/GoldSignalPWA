name: Gold price CSV (hourly)

on:
  schedule:
    - cron: "0 * * * *"   # كل ساعة على الدقيقة 00 بتوقيت UTC
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: gold-price-hourly
  cancel-in-progress: false

jobs:
  resample-hourly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build hourly CSV from 5min CSV
        shell: bash
        run: |
          set -e
          SRC="XAUUSD_5min.csv"
          if [ ! -f "$SRC" ]; then
            echo "::error ::$SRC غير موجود في الريبو."
            exit 1
          fi

          python << 'PY'
import csv, os, sys
from datetime import datetime, timezone

SRC = "XAUUSD_5min.csv"
rows = []
with open(SRC, newline='', encoding='utf-8') as f:
    r = csv.DictReader(f)
    for row in r:
        d = row.get('Date') or row.get('Time') or row.get('Datetime')
        c = row.get('Close') or row.get('Price') or row.get('Last')
        if not d or not c:
            continue
        try:
            # دعم ISO مع Z
            dd = d.replace('Z', '+00:00')
            t = datetime.fromisoformat(dd)
        except Exception:
            for fmt in ("%Y-%m-%d %H:%M:%S", "%Y-%m-%dT%H:%M:%S"):
                try:
                    t = datetime.strptime(d, fmt).replace(tzinfo=timezone.utc)
                    break
                except Exception:
                    t = None
            if t is None:
                continue
        try:
            p = float(c)
        except Exception:
            continue
        rows.append((t.astimezone(timezone.utc), p))

rows.sort()
by_hour = {}
for t, p in rows:
    key = t.replace(minute=0, second=0, microsecond=0, tzinfo=timezone.utc)
    by_hour[key] = p  # آخر إغلاق بكل ساعة

out = sorted(by_hour.items())
with open("XAUUSD_hourly.csv", "w", newline='', encoding='utf-8') as f:
    w = csv.writer(f)
    w.writerow(["Date", "Close"])
    for t, p in out:
        w.writerow([t.strftime("%Y-%m-%dT%H:%M:%SZ"), f"{p:.2f}"])
print(f"Wrote {len(out)} hourly rows", file=sys.stderr)
PY

      - name: Commit & push if changed
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add XAUUSD_hourly.csv
          if git diff --cached --quiet; then
            echo "No hourly CSV changes."
          else
            git commit -m "Update hourly CSV from 5min source"
            git push
          fi
